@model PagedList.IPagedList<ScratchCardApp.Models.PinCodeModel>

@{
    ViewBag.Title = "Index";
    int sn = 1;
}

<!-- Page Heading/Breadcrumbs -->
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">Scratch Cards
                    <small>Result</small>
                </h1>
                <ol class="breadcrumb">
                    <li><a href="index.html">Home</a>
                    </li>
                    <li class="active"></li>
                </ol>
            </div>
        </div>
        <!-- /.row -->

<div style="color:#1d6f14">
    <strong>Total: @ViewBag.Count</strong>
</div>
<p>
    @Html.ActionLink("Create New Batch", "PayCard2")
</p>

<div style="margin-bottom:7px">
@using (Html.BeginForm())
{
   <div >Search Log: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new {@class = "searchBar"}) 
   <input class = "btn btn-primary" type="submit" value="Search" /></div>
    <strong style="color:#185e11; font-size:12px; padding:3px;margin:5px">Find Member by Pin Number, BatchNumber,OwnerDetail,UserDetails and Serial Number</strong>
}
</div>

<table class="table table-striped table-hover table-bordered table-condenced">
    <tr>
        <th>S/N |</th>
        <th>
            PinNumber
        </th>
        <th>
            SerialNumber
        </th>
        <th>
            BatchNumber
        </th>
        <th>
            Usage
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.OrderBy(p=>p.SerialNumber)) {
    <tr>
        <td>@(sn++)</td>
        <td>
            @Html.DisplayFor(modelItem => item.PinNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SerialNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BatchNumber)
        </td>
       
        <td>
            @Html.DisplayFor(modelItem => item.Usage) 
            @if(item.Usage != 0)
            {
                <small style="color:#1d6f14">Remaning</small>
            }else
            {
            <small style="color:#f00">Finished</small>
            }
        </td>
          
        <td>
            
        </td>
    </tr>
}

</table>

<div>
    <p style="text-align:right; margin-top:10px">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
     
    @if (Model.HasPreviousPage)
    {
        @Ajax.ActionLink("<<  First", "Index2", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }, new AjaxOptions { UpdateTargetId = "main" }, new {@class = "small button" })
        @Html.Raw(" ");
        @Ajax.ActionLink("< Prev", "Index2", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }, new AjaxOptions { UpdateTargetId = "main" }, new {@class = "small button" })
    }
    else
    {
       
        @Html.Raw(" ");
        @: <span class = "small button" ><< Prev</span> 
    }
      
    @if (Model.HasNextPage)
    {
        
        @Ajax.ActionLink("Next >", "Index2", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }, new AjaxOptions { UpdateTargetId = "main" }, new {@class = "small button" })
         @Html.Raw(" ");
        @Ajax.ActionLink("Last >>", "Index2", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }, new AjaxOptions { UpdateTargetId = "main" }, new {@class = "small button" })
    }
    else
    {
        @:<span class = "small button" >Next >></span> 
        @Html.Raw(" ")
       
    }
</p>
</div>
<div style="width:100%;height:200px"></div>